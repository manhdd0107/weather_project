{"ast":null,"code":"var _jsxFileName = \"C:\\\\Study\\\\ReactJS\\\\weathermindx\\\\src\\\\Components\\\\Weather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { fetchDataWeather } from '../api/main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Weather = () => {\n  _s();\n  const [city, setCity] = useState('');\n  const [temp, setTemp] = useState(0);\n  const [desc, setDesc] = useState('');\n  const [hum, setHum] = useState(0);\n  const [wind, setWind] = useState(0);\n  const [image, setImage] = useState('');\n  const getWeather = async e => {\n    e.preventDefault();\n    const reponsve = await fetchDataWeather(city);\n    setTemp(Math.round(reponsve.main.temp));\n    setDesc(reponsve.weather[0].description);\n    setHum(Math.round(reponsve.main.humidity));\n    setWind(Math.round(reponsve.wind.speed));\n    selectImg(reponsve.weather[0].main);\n    console.log(reponsve);\n  };\n  function selectImg(sky) {\n    switch (sky) {\n      case \"Clear\":\n        setImage('https://cdn-icons-png.flaticon.com/512/6974/6974833.png');\n        break;\n      case \"Rain\":\n        setImage('https://cdn-icons-png.flaticon.com/512/6974/6974833.png');\n        break;\n      case \"Snow\":\n        setImage('https://cdn-icons-png.flaticon.com/512/642/642102.png');\n        break;\n      case \"Clouds\":\n        setImage('https://cdn-icons-png.flaticon.com/512/414/414825.png');\n        break;\n      case \"Haze\":\n        setImage('https://cdn-icons-png.flaticon.com/512/1197/1197102.png');\n        break;\n      default:\n        setImage('https://i.imgur.com/nt1lB3K.png');\n        break;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => getWeather(e),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: city,\n          placeholder: \"Th\\xE0nh ph\\u1ED1...\",\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), temp, \" \", desc, \" \", hum, \" \", wind, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Weather, \"/WEJGjLafWQquON34v4x9SaUq7Y=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","fetchDataWeather","jsxDEV","_jsxDEV","Fragment","_Fragment","Weather","_s","city","setCity","temp","setTemp","desc","setDesc","hum","setHum","wind","setWind","image","setImage","getWeather","e","preventDefault","reponsve","Math","round","main","weather","description","humidity","speed","selectImg","console","log","sky","children","className","onSubmit","value","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Study/ReactJS/weathermindx/src/Components/Weather.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { fetchDataWeather } from '../api/main'\r\n\r\n\r\nexport const Weather = () => {\r\n\r\n  const [city, setCity] = useState('')\r\n  const [temp, setTemp] = useState(0)\r\n  const [desc, setDesc] = useState('')\r\n  const [hum, setHum] = useState(0)\r\n  const [wind, setWind] = useState(0)\r\n  const [image, setImage] = useState('')\r\n\r\n\r\n  const getWeather = async (e) => {\r\n    e.preventDefault()\r\n    const reponsve = await fetchDataWeather(city)\r\n    setTemp(Math.round(reponsve.main.temp))\r\n    setDesc(reponsve.weather[0].description)\r\n    setHum(Math.round(reponsve.main.humidity))\r\n    setWind(Math.round(reponsve.wind.speed))\r\n    selectImg(reponsve.weather[0].main)\r\n    console.log(reponsve)\r\n  }\r\n\r\n  function selectImg(sky) {\r\n    switch (sky) {\r\n      case \"Clear\":\r\n        setImage('https://cdn-icons-png.flaticon.com/512/6974/6974833.png')\r\n        break;\r\n      case \"Rain\":\r\n        setImage('https://cdn-icons-png.flaticon.com/512/6974/6974833.png')\r\n        break;\r\n      case \"Snow\":\r\n        setImage('https://cdn-icons-png.flaticon.com/512/642/642102.png')\r\n        break;\r\n      case \"Clouds\":\r\n        setImage('https://cdn-icons-png.flaticon.com/512/414/414825.png')\r\n        break;\r\n      case \"Haze\":\r\n        setImage('https://cdn-icons-png.flaticon.com/512/1197/1197102.png')\r\n        break;\r\n      default:\r\n        setImage('https://i.imgur.com/nt1lB3K.png')\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='search'>\r\n        <form onSubmit={(e) => getWeather(e)}>\r\n          <input\r\n            value={city}\r\n            placeholder='Thành phố...'\r\n            onChange={(e) => setCity(e.target.value)}\r\n          />\r\n        </form>\r\n        {temp} {desc} {hum} {wind} <img src={image} alt=\"test\" />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}